name: Link PR to GitHub Issues

on:
  pull_request:
    types: [opened, edited]
    branches:
      - develop

jobs:
  link-pr-to-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract and link issues from PR description
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_DESCRIPTION="${{ github.event.pull_request.body }}"
          REPO_OWNER="${{ github.repository_owner }}"
          REPO_NAME="${{ github.event.repository.name }}"
          
          echo "üîç Processing PR #$PR_NUMBER"
          
          # Extract Issue URLs from PR description using regex
          # Matches: https://github.com/org/repo/issues/123
          ISSUE_URLS=$(echo "$PR_DESCRIPTION" | grep -oE 'https://github\.com/[^/]+/[^/]+/issues/[0-9]+')
          
          if [ -z "$ISSUE_URLS" ]; then
            echo "‚ö†Ô∏è No Issue URLs found in PR description"
            exit 0
          fi
          
          echo "üìã Found Issue URLs:"
          echo "$ISSUE_URLS"
          
          # Process each Issue URL
          while IFS= read -r ISSUE_URL; do
            if [ -z "$ISSUE_URL" ]; then
              continue
            fi
            
            echo "üîó Processing: $ISSUE_URL"
            
            # Extract issue number and repo info from URL
            ISSUE_NUMBER=$(echo "$ISSUE_URL" | grep -oE '[0-9]+$')
            ISSUE_REPO_PATH=$(echo "$ISSUE_URL" | sed 's|https://github\.com/||' | sed 's|/issues/.*||')
            ISSUE_OWNER=$(echo "$ISSUE_REPO_PATH" | cut -d'/' -f1)
            ISSUE_REPO=$(echo "$ISSUE_REPO_PATH" | cut -d'/' -f2)
            
            # Link PR to Issue using GitHub's Development API
            LINK_PAYLOAD=$(jq -n \
              --arg issue_repo "$ISSUE_OWNER/$ISSUE_REPO" \
              --arg issue_number "$ISSUE_NUMBER" \
              '{
                "subject_id": $issue_number,
                "subject_type": "ISSUE",
                "subject_repo": $issue_repo
              }')
            
            LINK_RESPONSE=$(curl -s -w "\n%{http_code}" -X PUT \
              "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/pulls/$PR_NUMBER/requested_reviewers" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              --data "$LINK_PAYLOAD")
            
            # Use the correct Development API endpoint
            DEVELOPMENT_LINK_RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
              "https://api.github.com/repos/$ISSUE_OWNER/$ISSUE_REPO/issues/$ISSUE_NUMBER/development" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              --data "{
                \"head_repository\": \"$REPO_OWNER/$REPO_NAME\",
                \"head_ref\": \"${{ github.event.pull_request.head.ref }}\",
                \"base_ref\": \"${{ github.event.pull_request.base.ref }}\"
              }")
            
            HTTP_CODE=$(echo "$DEVELOPMENT_LINK_RESPONSE" | tail -n1)
            
            if [ "$HTTP_CODE" -eq 201 ] || [ "$HTTP_CODE" -eq 200 ]; then
              echo "‚úÖ Successfully linked PR #$PR_NUMBER to Issue #$ISSUE_NUMBER in Development section"
            else
              echo "‚ùå Failed to link PR #$PR_NUMBER to Issue #$ISSUE_NUMBER (HTTP $HTTP_CODE)"
              echo "Response: $(echo "$DEVELOPMENT_LINK_RESPONSE" | head -n -1)"
            fi
            
          done <<< "$ISSUE_URLS"
